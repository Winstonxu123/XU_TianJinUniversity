1.git config --global user.name Steve
  git config --global --replace-all  user.name steve
  git config --global user.email xujigentleman@126.com
  git config --list

2.git init .
  git add .
  git add <filename>

3.git commit -m "<description>"
	git commit -am "<description>"  //we don't need to "git add ",which means we can commit directly after we modify 

4.git log

5.git diff    //compare local area to repository

6.git diff --staged   //compare staging area to repository

7.git status

8.git rm <filename>

9.git mv <filename1> <filename2> //rename

10.git checkout -- <filename> //recover modified files to the old version in repository,e.g. I change 1.txt, then I run this command, I will get 1.txt in the last commit repository.

11.git reset HEAD <filename>  //make unstaged files reset

12.git checkout <commit number(don't need to all of these numbers, just few of them)> -- <filename>   //recover old version from the repository. (recovering just likes copying old version and commit to the repository) 

13.git remote add origin(your nickname) https:...
	git remote //check out your nickname
	git push -u original(your nickname) master  //put all of your files to server
	git push original master

----------------------------------------------------------------------------------------------------------------------
Note: all of these operations are not necessary if you use GitHub Desktop.
It's cool. Why not start up your github journey?